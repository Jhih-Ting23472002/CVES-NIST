import { TestBed } from '@angular/core/testing';
import { CveOptimizationService } from './cve-optimization.service';
import { CveRecord } from '../interfaces/nvd-database.interface';
import { OptimizedCveRecord } from '../interfaces/optimized-storage.interface';

describe('CveOptimizationService', () => {
  let service: CveOptimizationService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(CveOptimizationService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  describe('優化結構化資料', () => {
    it('應該從 CPE configurations 中正確提取產品資訊', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-1234',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'A vulnerability in form-data package.'
          }
        ],
        configurations: [
          {
            nodes: [
              {
                operator: 'OR',
                negate: false,
                cpeMatch: [
                  {
                    vulnerable: true,
                    criteria: 'cpe:2.3:a:form-data:form-data:*:*:*:*:*:node.js:*:*',
                    matchCriteriaId: 'test-id',
                    versionEndExcluding: '2.5.4'
                  }
                ]
              }
            ]
          }
        ],
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'MEDIUM',
        cvssScore: 5.5,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Analyzed',
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N',
        cpeMatchCount: 1,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized).toBeTruthy();
      expect(optimized.optimizedProductInfo).toBeDefined();
      expect(optimized.optimizedProductInfo.length).toBeGreaterThan(0);
      
      const productInfo = optimized.optimizedProductInfo[0];
      expect(productInfo.productName).toBe('form-data');
      expect(productInfo.ecosystem).toBe('npm');
      expect(productInfo.versionRanges.length).toBeGreaterThan(0);
      expect(productInfo.confidenceScore).toBeGreaterThan(0.5);
    });
  });

  describe('優化描述文字', () => {
    it('應該從描述中提取產品和版本資訊', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-5678',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'This issue affects form-data: < 2.5.4, 3.0.0 - 3.0.3.'
          }
        ],
        configurations: [], // 空的 configurations，觸發描述解析
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'HIGH',
        cvssScore: 7.5,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Awaiting Analysis', // 觸發描述回退
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: undefined,
        cpeMatchCount: 0,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized).toBeTruthy();
      expect(optimized.optimizedProductInfo).toBeDefined();
      expect(optimized.optimizedProductInfo.length).toBeGreaterThan(0);

      const productInfo = optimized.optimizedProductInfo[0];
      expect(productInfo.productName).toBe('form-data');
      expect(productInfo.ecosystem).toBe('npm');
      expect(productInfo.descriptionInfo).toBeDefined();
      expect(productInfo.descriptionInfo?.extractedProductName).toBe('form-data');
      expect(productInfo.versionRanges.length).toBeGreaterThan(0);
    });
  });

  describe('資料提取方法記錄', () => {
    it('應該正確記錄使用的提取方法', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-9999',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'A vulnerability exists in the test-package.'
          }
        ],
        configurations: [
          {
            nodes: [
              {
                operator: 'OR',
                negate: false,
                cpeMatch: [
                  {
                    vulnerable: true,
                    criteria: 'cpe:2.3:a:test:test-package:1.0.0:*:*:*:*:*:*:*',
                    matchCriteriaId: 'test-id'
                  }
                ]
              }
            ]
          }
        ],
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'LOW',
        cvssScore: 3.0,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Analyzed',
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: undefined,
        cpeMatchCount: 1,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized.dataExtractionMethods).toBeDefined();
      expect(optimized.dataExtractionMethods.length).toBeGreaterThan(0);
      
      const structuredMethod = optimized.dataExtractionMethods.find(
        method => method.method === 'structured_cpe'
      );
      expect(structuredMethod).toBeDefined();
      expect(structuredMethod?.success).toBe(true);
      expect(structuredMethod?.extractedProductCount).toBeGreaterThan(0);
    });
  });

  describe('產品名稱正規化', () => {
    it('應該正確清理和正規化產品名稱', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-NORM',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'Test description'
          }
        ],
        configurations: [
          {
            nodes: [
              {
                operator: 'OR',
                negate: false,
                cpeMatch: [
                  {
                    vulnerable: true,
                    criteria: 'cpe:2.3:a:test:form-data_project:*:*:*:*:*:node.js:*:*',
                    matchCriteriaId: 'test-id'
                  }
                ]
              }
            ]
          }
        ],
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'MEDIUM',
        cvssScore: 5.0,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Analyzed',
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: undefined,
        cpeMatchCount: 1,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized.optimizedProductInfo.length).toBeGreaterThan(0);
      const productInfo = optimized.optimizedProductInfo[0];
      
      // 應該移除 "_project" 後綴
      expect(productInfo.productName).toBe('form-data');
      expect(productInfo.aliases).toContain('form_data');
    });
  });

  describe('版本約束處理', () => {
    it('應該正確解析版本約束', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-VERSION',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'Test description'
          }
        ],
        configurations: [
          {
            nodes: [
              {
                operator: 'OR',
                negate: false,
                cpeMatch: [
                  {
                    vulnerable: true,
                    criteria: 'cpe:2.3:a:test:test-package:*:*:*:*:*:*:*:*',
                    matchCriteriaId: 'test-id',
                    versionStartIncluding: '1.0.0',
                    versionEndExcluding: '2.0.0'
                  }
                ]
              }
            ]
          }
        ],
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'CRITICAL',
        cvssScore: 9.0,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Analyzed',
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: undefined,
        cpeMatchCount: 1,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized.optimizedProductInfo.length).toBeGreaterThan(0);
      const productInfo = optimized.optimizedProductInfo[0];
      expect(productInfo.versionRanges.length).toBeGreaterThan(0);
      
      const versionRange = productInfo.versionRanges[0];
      expect(versionRange.versionConstraints.length).toBe(2);
      
      const gteConstraint = versionRange.versionConstraints.find(c => c.type === 'gte');
      const ltConstraint = versionRange.versionConstraints.find(c => c.type === 'lt');
      
      expect(gteConstraint?.version).toBe('1.0.0');
      expect(ltConstraint?.version).toBe('2.0.0');
    });
  });

  describe('信心分數計算', () => {
    it('結構化資料應該有較高的信心分數', () => {
      const mockCveRecord: CveRecord = {
        id: 'CVE-2023-CONFIDENCE',
        published: '2023-01-01T00:00:00.000Z',
        lastModified: '2023-01-01T00:00:00.000Z',
        descriptions: [
          {
            lang: 'en',
            value: 'Test description'
          }
        ],
        configurations: [
          {
            nodes: [
              {
                operator: 'OR',
                negate: false,
                cpeMatch: [
                  {
                    vulnerable: true,
                    criteria: 'cpe:2.3:a:test:test-package:*:*:*:*:*:*:*:*',
                    matchCriteriaId: 'test-id',
                    versionEndExcluding: '2.0.0'
                  }
                ]
              }
            ]
          }
        ],
        references: [],
        keywordSearchText: '',
        affectedProducts: [],
        severity: 'HIGH',
        cvssScore: 8.0,
        versionRanges: [],
        sourceIdentifier: 'test@example.com',
        vulnStatus: 'Analyzed',
        weaknesses: [],
        cveTags: [],
        primaryCvssVector: undefined,
        cpeMatchCount: 1,
        referenceCount: 0,
        vendorProducts: [],
        ecosystems: [],
        dataVersion: '2023-01-01',
        publishedYear: 2023,
        syncTimestamp: Date.now()
      };

      const optimized = service.optimizeCveRecord(mockCveRecord);

      expect(optimized.optimizedProductInfo.length).toBeGreaterThan(0);
      const productInfo = optimized.optimizedProductInfo[0];
      
      // 結構化資料 + 版本約束應該有高信心分數
      expect(productInfo.confidenceScore).toBeGreaterThan(0.7);
    });
  });
});