export interface Vulnerability {
  cveId: string;
  description: string;
  severity: VulnerabilitySeverity;
  cvssScore: number;
  cvssVector?: string;
  publishedDate: string;
  lastModifiedDate: string;
  references: string[];
  affectedVersions: string[];
  fixedVersion?: string;
}

export interface PackageInfo {
  name: string;
  version: string;
  description?: string;
  type: 'dependency' | 'devDependency';
}

export interface PackageVulnerability {
  packageName: string;
  currentVersion: string;
  description?: string;
  vulnerabilities: Vulnerability[];
  riskLevel: VulnerabilitySeverity;
  recommendedVersion?: string;
  alternatives?: PackageAlternative[];
  lastUpdated: Date;
  checkingUpdates?: boolean;
}

export interface PackageAlternative {
  name: string;
  description: string;
  securityScore?: number;
}

export interface ScanResult {
  totalPackages: number;
  scannedPackages: number;
  vulnerablePackages: PackageVulnerability[];
  summary: VulnerabilitySummary;
  scanDate: Date;
  duration: number;
  scanId: string;
}

export interface VulnerabilitySummary {
  critical: number;
  high: number;
  medium: number;
  low: number;
  safe: number;
}

export interface ScanProgress {
  current: number;
  total: number;
  percentage: number;
  currentPackage: string;
  estimatedTimeRemaining?: number;
}

export type VulnerabilitySeverity = 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW' | 'NONE';

export type ScanStatus = 'idle' | 'running' | 'paused' | 'completed' | 'error' | 'cancelled';

export interface ValidationResult {
  isValid: boolean;
  errors: string[];
  warnings: string[];
}

export interface ExportOptions {
  format: 'pdf' | 'csv' | 'json';
  includeOptions: {
    summary: boolean;
    vulnerabilities: boolean;
    recommendations: boolean;
    charts: boolean;
  };
  minimumSeverity: VulnerabilitySeverity;
}

export interface ApiResponse<T> {
  data: T;
  success: boolean;
  message?: string;
  errors?: string[];
}